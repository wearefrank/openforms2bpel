<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter
        name="WorkflowSelector"
        active="${WorkflowSelector.Active}"
        description=""
        >

        <!-- <Receiver
            name="WorkflowSelector"
            transactionAttribute="Required"
            >
            <JavaListener
                name="WorkflowSelector"
                />
            <JdbcErrorStorage
                name="WorkflowSelector"
                slotId="${instance.name}/WorkflowSelector"
                onlyStoreWhenMessageIdUnique="true"
                />
        </Receiver> -->
        <Receiver
            name="WorkflowSelector"
            transactionAttribute="Required"
            pollInterval="5"
            maxRetries="0"
            >
            <MessageStoreListener
                name="WorkflowSelector"
				slotId="${instance.name}/WorkflowSelector"
                peekUntransacted="true"
                statusValueInProcess="I"
				/>
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="EXIT" state="SUCCESS" />
                <Exit name="EXCEPTION" state="ERROR" />
            </Exits>

            <SenderPipe
                name="ReplaceXmlIllegalElementNamesSender"
                >
				<JavascriptSender
                    name="ReplaceXmlIllegalElementNamesJavascriptSender"
                    jsFileName="Common/ReplaceXmlIllegalElementNames.js"
                    jsFunctionName="replaceXmlIllegalElementNames"
                    >
					<Param name="obj" />
				</JavascriptSender>
			</SenderPipe>

			<JsonPipe 
				name="JsonToXml"
                storeResultInSessionKey="FormObject"
				>
                <Forward name="success" path="UnwrapOpenZaakEnvelopeToSingle"/>
            </JsonPipe>

			<XsltPipe
                name="UnwrapOpenZaakEnvelopeToSingle"
                styleSheetName="Zgw/UnwrapOpenZaakApiEnvelopeToSingle.xslt"
                >
                <Param name="Type" value="ZgwObject"/>
                <Forward name="success" path="UnwrapObjectsApiDataToSingle"/>
            </XsltPipe>

            <XsltPipe
                name="UnwrapObjectsApiDataToSingle"
                styleSheetName="Zgw/UnwrapObjectsApiDataToSingle.xslt"
                storeResultInSessionKey="UnwrappedMessage"
                >
                <Param name="Type" value="ZgwObject" />
                <Forward name="success" path="FormdataCollector" />
            </XsltPipe>

            <!-- Formdata collection/transform - start -->
            <XsltPipe
                name="FormdataCollector"
                getInputFromSessionKey="FormObject"
                styleSheetName="${openforms2bpel.formdata.collectorStylesheetFile}"
                >
                <Forward name="success" path="FormdataTransform" />
                <Forward name="exception" path="FormdataCollectorFailed_Exception" />
            </XsltPipe>

            <ExceptionPipe name="FormdataCollectorFailed_Exception" />

            <XsltPipe
                name="FormdataTransform"
                styleSheetName="${openforms2bpel.formdata.transformStylesheetFile}"
                storeResultInSessionKey="Formdata"
                >
                <Forward name="success" path="NoFormdata_Condition" />
                <Forward name="exception" path="FormdataTransformationFailed_Exception" />
            </XsltPipe>

            <ExceptionPipe name="FormdataTransformationFailed_Exception" />

            <XmlIfPipe
                name="NoFormdata_Condition"
                xpathExpression="string-length(//formdata) = 0"
                >
                <Forward name="then" path="NoFormadata_Exception" />
                <Forward name="else" path="CheckForWorkflow_TwoWayCommunication" />
            </XmlIfPipe>

            <ExceptionPipe name="NoFormadata_Exception" />
            <!-- Formdata collection/transform - end -->

            <XmlIfPipe
                name="CheckForWorkflow_TwoWayCommunication"
                getInputFromSessionKey="UnwrappedMessage"
                xpathExpression="string-length(//gegevenstweewegcommunicatie) gt 0"
                >
                <Forward name="then" path="Workflow_TwoWayCommunicationSender" />
                <Forward name="else" path="CheckForWorkflow_UwGegevens" />
            </XmlIfPipe>

            <SenderPipe
                name="Workflow_TwoWayCommunicationSender"
                getInputFromSessionKey="UnwrappedMessage"
                transactionAttribute="Required"
                >
                <IbisLocalSender
                    name="Workflow_TwoWayCommunicationLocalSender"
                    javaListener="Workflow_TwoWayCommunication"
                    >
                    <Param name="Formdata" sessionKey="Formdata" type="DOMDOC" />
                </IbisLocalSender>
                <!-- <MessageStoreSender
					name="Workflow_TwoWayCommunicationMessageStoreSender"
					slotId="${instance.name}/Workflow_TwoWayCommunication"
                    onlyStoreWhenMessageIdUnique="true"
                    transacted="true"
					>
                    <Param name="messageId" xpathExpression="//gegevenstweewegcommunicatie/zaaknummer" />
				</MessageStoreSender> -->
                <Forward name="success" path="EXIT" />
            </SenderPipe>

            <XmlIfPipe
                name="CheckForWorkflow_UwGegevens"
                getInputFromSessionKey="UnwrappedMessage"
                xpathExpression="string-length(//*[starts-with(name(), 'uw-gegevens')]) gt 0"
                >
                <Forward name="then" path="Workflow_UwGegevensSender" />
                <Forward name="else" path="Workflow_FallbackSender" />
            </XmlIfPipe>

            <SenderPipe
                name="Workflow_UwGegevensSender"
                getInputFromSessionKey="UnwrappedMessage"
                transactionAttribute="Required"
                >
                <IbisLocalSender
                    name="Workflow_UwGegevensLocalSender"
                    javaListener="Workflow_UwGegevens"
                    >
                    <Param name="Formdata" sessionKey="Formdata" type="DOMDOC" />
                </IbisLocalSender>
                <!-- <MessageStoreSender
					name="Workflow_UwGegevensMessageStoreSender"
					slotId="${instance.name}/Workflow_UwGegevens"
                    onlyStoreWhenMessageIdUnique="true"
                    transacted="true"
					>
                    <Param name="messageId" xpathExpression="/ZgwObject/public_reference" />
				</MessageStoreSender> -->
                <Forward name="success" path="EXIT" />
            </SenderPipe>

            <SenderPipe
                name="Workflow_FallbackSender"
                getInputFromSessionKey="UnwrappedMessage"
                transactionAttribute="Required"
                >
                <IbisLocalSender
                    name="Workflow_FallbackLocalSender"
                    javaListener="Workflow_Fallback"
                    >
                    <Param name="Formdata" sessionKey="Formdata" type="DOMDOC" />
                </IbisLocalSender>
                <!-- <MessageStoreSender
					name="Workflow_FallbackMessageStoreSender"
					slotId="${instance.name}/Workflow_Fallback"
                    onlyStoreWhenMessageIdUnique="true"
                    transacted="true"
					>
                    <Param name="messageId" xpathExpression="/ZgwObject/public_reference" />
				</MessageStoreSender> -->
                <Forward name="success" path="EXIT" />
            </SenderPipe>

        </Pipeline>
    </Adapter>
</Module>